<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../build/metaschema-xslt/src/validate/metaschema-composition-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!-- OSCAL CATALOG METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<?xml-stylesheet type="text/css" href="metaschema-author.css"?>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0" abstract="yes">
    <schema-name>OSCAL Document Metadata Description</schema-name>
    <schema-version>1.1.2</schema-version>
    <short-name>oscal-metadata</short-name>
    <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
    <json-base-uri>http://csrc.nist.gov/ns/oscal</json-base-uri>

    <!-- ############################################### -->
    <!-- # Metadata Assembly and supporting constructs # -->
    <!-- ############################################### -->
    <define-assembly name="metadata">
        <formal-name>Document Metadata</formal-name>
        <description>Provides information about the containing document, and defines concepts that are shared across the document.</description>
        <model>
            <define-field name="title" as-type="markup-line" min-occurs="1">
                <formal-name>Document Title</formal-name>
                <description>A name given to the document, which may be used by a tool for display and navigation.</description>
            </define-field>
            <field ref="published"/>
            <field ref="last-modified" min-occurs="1"/>
            <field ref="version" min-occurs="1"/>
            <field ref="oscal-version" min-occurs="1"/>
            <define-assembly name="revision" max-occurs="unbounded">
                <formal-name>Revision History Entry</formal-name>
                <description>An entry in a sequential list of revisions to the containing document, expected to be in reverse chronological order (i.e. latest first).</description>
                <group-as name="revisions" in-xml="GROUPED" in-json="ARRAY"/>                <model>
                    <define-field name="title" as-type="markup-line">
                        <formal-name>Document Title</formal-name>
                        <description>A name given to the document revision, which may be used by a tool for display and navigation.</description>
                    </define-field>
                    <field ref="published" />
                    <field ref="last-modified"/>
                    <field ref="version" min-occurs="1"/>
                    <field ref="oscal-version"/>
                    <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                    </assembly>
                    <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                    </assembly>
                    <field ref="remarks" in-xml="WITH_WRAPPER"/>
                </model>
                <constraint>
                    <!-- TODO: consider making this a warning
            <has-cardinality target="published|last-modified|link[@rel='canonical']" min-occurs="1"/>
-->
                    <allowed-values target="link/@rel" allow-other="yes">
                        <enum value="canonical">The link identifies the authoritative location for this resource. Defined by <a href="https://tools.ietf.org/html/rfc6596">RFC 6596</a>.</enum>
                        <enum value="alternate">The link identifies an alternative location or format for this resource. Defined by <a href="https://html.spec.whatwg.org/multipage/links.html#linkTypes">the HTML Living Standard</a></enum>
                        <enum value="predecessor-version">This link identifies a resource containing the predecessor version in the version history. Defined by  <a href="https://tools.ietf.org/html/rfc5829">RFC 5829</a>.</enum>
                        <enum value="successor-version">This link identifies a resource containing the predecessor version in the version history. Defined by <a href="https://tools.ietf.org/html/rfc5829">RFC 5829</a>.</enum>
                        <enum value="version-history">This link identifies a resource containing the version history of this document. Defined by <a href="https://tools.ietf.org/html/rfc5829">RFC 5829</a>.</enum>
                    </allowed-values>
                    <!-- TODO: check for if the last-modified is >= the latest revision. -->
                </constraint>
                <remarks>
                    <p>While <code>published</code>, <code>last-modified</code>, and <code>oscal-version</code> are not required, values for these entries should be provided if the information is known. A <code>link</code> with a <code>rel</code> of <q>source</q> should be provided if the information is known.</p>
                </remarks>
            </define-assembly>
            <field ref="document-id" max-occurs="unbounded">
                <group-as name="document-ids" in-json="ARRAY"/>
            </field>
            <assembly ref="property" max-occurs="unbounded">
                <group-as name="props" in-json="ARRAY"/>
            </assembly>
            <assembly ref="link" max-occurs="unbounded">
                <group-as name="links" in-json="ARRAY"/>
            </assembly>
            <define-assembly name="role" max-occurs="unbounded">
                <formal-name>Role</formal-name>
                <description>Defines a function, which might be assigned to a party in a specific situation.</description>
                <group-as name="roles" in-json="ARRAY"/>
                <define-flag name="id" as-type="token" required="yes">
                    <!-- Identifier Declarations -->
                    <formal-name>Role Identifier</formal-name>
                    <description>A unique identifier for the role.</description>
                    <prop name="value-type" value="identifier"/>
                    <prop name="identifier-type" value="human-oriented"/>
                    <prop name="identifier-uniqueness" value="instance"/>
                    <prop name="identifier-scope" value="cross-instance"/>
                    <prop name="identifier-persistence" value="per-subject"/>
                    <!-- TODO: discuss overriding of locally defined values. -->
                </define-flag>
                <model>
                    <define-field name="title" as-type="markup-line" min-occurs="1">
                        <formal-name>Role Title</formal-name>
                        <description>A name given to the role, which may be used by a tool for display and navigation.</description>
                    </define-field>
                    <define-field name="short-name">
                        <formal-name>Role Short Name</formal-name>
                        <description>A short common name, abbreviation, or acronym for the role.</description>
                    </define-field>
                    <!-- CHANGE "desc" to "description" -->
                    <define-field name="description" in-xml="WITH_WRAPPER" as-type="markup-multiline">
                        <formal-name>Role Description</formal-name>
                        <description>A summary of the role's purpose and associated responsibilities.</description>
                    </define-field>
                    <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                    </assembly>
                    <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                    </assembly>
                    <field ref="remarks" in-xml="WITH_WRAPPER"/>
                </model>
                <!-- TODO: Add support for builtin objects -->
                <!--
                <builtins>
                    <role id="creator">
                        <title>Document Created By Party </title>
                        <short-name>Document Creator</short-name>
                        <description>
                            <p>Indicates the person or organization that created this content.</p>
                        </description>
                    </role>
                    <role id="prepared-by">
                        <title>Prepared by Party</title>
                        <short-name>Prepared By</short-name>
                        <description>
                            <p>Indicates the person or organization that prepared this content.</p>
                        </description>
                    </role>
                    <role id="prepared-for">
                        <title>Prepared for Party</title>
                        <short-name>Prepared For</short-name>
                        <description>
                            <p>Indicates the person or organization for which this content was created.</p>
                        </description>
                    </role>
                    <role id="content-approver">
                        <title>Approved by Party</title>
                        <short-name>Content Approver</short-name>
                        <description>
                            <p>Indicates the person or organization responsible for all content represented in the "document".</p>
                        </description>
                    </role>
                    <role id="contact">
                        <title>Document Contact</title>
                        <short-name>Contact</short-name>
                        <description>
                            <p>Indicates the person or organization to contact for questions or support related to this content.</p>
                        </description>
                    </role>
                </builtins>
                -->
                <remarks>
                    <!-- TODO: roles only appear in metadata. Referenced in the document and linked instances. -->
                    <!-- TODO: discuss built-in roles. -->
                    <p>Permissible values to be determined closer to the application (e.g. by a receiving authority).</p>
                    <p>OSCAL has defined a set of standardized roles for consistent use in OSCAL documents. This allows tools consuming OSCAL content to infer specific semantics when these roles are used. These roles are documented in the specific contexts of their use (e.g., responsible-party, responsible-role). When using such a role, it is necessary to define these roles in this list, which will then allow such a role to be referenced.</p>
                </remarks>
            </define-assembly>
            <define-assembly name="location" max-occurs="unbounded">
                <formal-name>Location</formal-name>
                <description>A physical point of presence, which may be associated with people, organizations, or other concepts within the current or linked OSCAL document.</description>
                <group-as name="locations" in-json="ARRAY"/>
                <define-flag name="uuid" as-type="uuid" required="yes">
                    <formal-name>Location Universally Unique Identifier</formal-name>
                    <description>A unique ID for the location, for reference.</description>
                </define-flag>
                <model>
                    <define-field name="title" as-type="markup-line">
                        <formal-name>Location Title</formal-name>
                        <description>A name given to the location, which may be used by a tool for display and navigation.</description>
                    </define-field>
                    <assembly ref="address">
                        <remarks>
                            <p>The physical address of the location, which will provided for physical locations. Virtual locations can omit this data item.</p>
                        </remarks>
                    </assembly>
                    <field ref="email-address" max-occurs="unbounded">
                        <group-as name="email-addresses" in-json="ARRAY"/>
                        <remarks>
                            <p>A contact email associated with the location.</p>
                        </remarks>
                    </field>
                    <field ref="telephone-number" max-occurs="unbounded">
                        <group-as name="telephone-numbers" in-json="ARRAY"/>
                        <remarks>
                            <p>A phone number used to contact the location.</p>
                        </remarks>
                    </field>
                    <define-field name="url" as-type="uri" max-occurs="unbounded" deprecated="1.1.0">
                        <formal-name>Location URL</formal-name>
                        <description>The uniform resource locator (URL) for a web site or other resource associated with the location.</description>
                        <group-as name="urls" in-json="ARRAY"/>
                        <remarks>
                            <p>This data field is deprecated in favor of using a link with an appropriate relationship.</p>
                        </remarks>
                    </define-field>
                    <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                    </assembly>
                    <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                    </assembly>
                    <field ref="remarks" in-xml="WITH_WRAPPER"/>
                </model>
                <constraint>
                    <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="type">Characterizes the kind of location.</enum>
                    </allowed-values>
                    <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name='type']/@value">
                        <enum value="data-center">A location that contains computing assets. A <code>class</code> can be used to indicate the sub-type of data-center as <em>primary</em> or <em>alternate</em>.</enum>
                    </allowed-values>
                    <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name='type' and @value='data-center']/@class">
                        <enum value="primary">The location is a data-center used for normal operations.</enum>
                        <enum value="alternate">The location is a data-center used for fail-over or backup operations.</enum>
                    </allowed-values>
                    <has-cardinality target="address" level="WARNING" min-occurs="1">
                        <description>In most cases, it is useful to define a location. In some cases, defining an explicit location may represent a security risk.</description>
                    </has-cardinality>
                    <has-cardinality target="title|address|email-address|telephone-number" level="ERROR" min-occurs="1">
                        <description>A location must have at least a title, address, email-address, or telephone number.</description>
                    </has-cardinality>
                </constraint>
                <remarks>
                    <p>An address might be sensitive in nature. In such cases a title, mailing address, email-address, and/or phone number may be used instead.</p>
                </remarks>
            </define-assembly>
            <define-assembly name="party" max-occurs="unbounded">
                <formal-name>Party</formal-name>
                <description>An organization or person, which may be associated with roles or other concepts within the current or linked OSCAL document.</description>
                <group-as name="parties" in-json="ARRAY"/>
                <define-flag name="uuid" as-type="uuid" required="yes">
                    <formal-name>Party Universally Unique Identifier</formal-name>
                    <!-- Identifier Declaration -->
                    <description>A unique identifier for the party.</description>
                    <prop name="value-type" value="identifier"/>
                    <prop name="identifier-type" value="machine-oriented"/>
                    <prop name="identifier-uniqueness" value="instance"/>
                    <prop name="identifier-scope" value="cross-instance"/>
                    <prop name="identifier-persistence" value="per-subject"/>
                </define-flag>
                <define-flag name="type" as-type="string" required="yes">
                    <formal-name>Party Type</formal-name>
                    <description>A category describing the kind of party the object describes.</description>
                    <constraint>
                        <allowed-values>
                            <enum value="person">A human being regarded as an individual.</enum>
                            <enum value="organization">An organized group of one or more <code>person</code> individuals with a specific purpose.</enum>
                        </allowed-values>
                    </constraint>
                </define-flag>
                <model>
                    <define-field name="name">
                        <formal-name>Party Name</formal-name>
                        <description>The full name of the party. This is typically the legal name associated with the party.</description>
                    </define-field>
                    <define-field name="short-name">
                        <formal-name>Party Short Name</formal-name>
                        <description>A short common name, abbreviation, or acronym for the party.</description>
                    </define-field>
                    <define-field name="external-id" max-occurs="unbounded">
                        <!-- This is an id because the idenfier is assigned and managed externally by humans. -->
                        <formal-name>Party External Identifier</formal-name>
                        <description>An identifier for a person or organization using a designated
                            scheme. e.g. an Open Researcher and Contributor ID
                            (ORCID).</description>
                        <json-value-key>id</json-value-key>
                        <group-as name="external-ids" in-json="ARRAY"/>
                        <define-flag name="scheme" as-type="uri" required="yes">
                            <formal-name>External Identifier Schema</formal-name>
                            <description>Indicates the type of external identifier.</description>
                            <constraint>
                                <allowed-values allow-other="yes">
                                    <enum value="http://orcid.org/">The identifier is Open Researcher and Contributor ID (ORCID).</enum>
                                </allowed-values>
                            </constraint>
                            <remarks>
                                <p>This value must be an <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri">absolute URI</a> that serves as a <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier">naming system identifier</a>.</p>
                            </remarks>
                        </define-flag>
                    </define-field>
                    <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                    </assembly>
                    <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                    </assembly>
                    <field ref="email-address" max-occurs="unbounded">
                        <group-as name="email-addresses" in-json="ARRAY"/>
                        <remarks>
                            <p>This is a contact email associated with the party.</p>
                        </remarks>
                    </field>
                    <field ref="telephone-number" max-occurs="unbounded">
                        <group-as name="telephone-numbers" in-json="ARRAY"/>
                        <remarks>
                            <p>A phone number used to contact the party.</p>
                        </remarks>
                    </field>
                    <choice>
                        <assembly ref="address" max-occurs="unbounded">
                            <group-as name="addresses" in-json="ARRAY"/>
                        </assembly>
                        <field ref="location-uuid" max-occurs="unbounded">
                            <group-as name="location-uuids" in-json="ARRAY"/>
                        </field>
                    </choice>
                    <define-field name="member-of-organization" as-type="uuid" max-occurs="unbounded">
                        <formal-name>Organizational Affiliation</formal-name>
                        <!-- Identifier Reference -->
                        <description>A reference to another <code>party</code> by UUID, typically an organization, that this subject is associated with.</description>
                        <prop name="value-type" value="identifier-reference"/>
                        <prop name="identifier-type" value="machine-oriented"/>
                        <prop name="identifier-scope" value="cross-instance"/>
                        <group-as name="member-of-organizations" in-json="ARRAY"/>
                        <constraint>
                            <!-- TODO: Move to top-level to address cross-document issues. -->
                            <index-has-key name="index-metadata-party-organizations-uuid" target=".">
                                <key-field target="."/>
                            </index-has-key>
                        </constraint>
                        <remarks>
                            <p>Since the reference target of an organizational affiliation must be another <code>party</code> (whether further qualified as person or organization) as inidcated by its <code>uuid</code>. As a <a href="https://pages.nist.gov/OSCAL/concepts/identifier-use/#machine-oriented" >machine-oriented</a> identifier with uniqueness across document and trans-document scope, this <code>uuid</code> value is sufficient to reference the data item locally or globally across related documents, e.g., in an imported OSCAL instance. </p>
                            <p>Parties of both the <code>person</code> or <code>organization</code> type can be associated with an organization using the <code>member-of-organization</code>.</p>
                        </remarks>
                    </define-field>
                    <field ref="remarks" in-xml="WITH_WRAPPER"/>
                </model>
                <constraint>
                    <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="mail-stop">A mail stop associated with the party.</enum>
                        <enum value="office">The name or number of the party's office.</enum>
                        <enum value="job-title">The formal job title of a person.</enum>
                    </allowed-values>
                </constraint>
                <remarks>
                    <p>A party can be optionally associated with either an address or a location. While providing a meaningful location for a party is desired, there are some cases where it might not be possible to provide an exact location or even any location.</p>
                </remarks>
            </define-assembly>
            <assembly ref="responsible-party" max-occurs="unbounded">
                <group-as name="responsible-parties" in-json="ARRAY"/>
            </assembly>
            <assembly ref="action" max-occurs="unbounded">
                <group-as name="actions" in-json="ARRAY"/>
            </assembly>
            <field ref="remarks" in-xml="WITH_WRAPPER"/>
        </model>
        <constraint>
            <index id="index-metadata-roles" name="index-metadata-role-ids" target="role">
                <!-- TODO: Should this be unique across the document and all imported documents? -->
                <key-field target="@id"/>
            </index>
            <is-unique id="unique-metadata-doc-id" target="document-id">
                <!--  CHANGE: Fixing field name @type -> @scheme   -->
                <key-field target="@scheme"/>
                <key-field target="."/>
            </is-unique>
            <is-unique id="unique-metadata-property" target="prop">
                <key-field target="@name"/>
                <key-field target="@ns"/>
                <key-field target="@class"/>
                <key-field target="@group"/>
                <key-field target="@value"/>
            </is-unique>
            <index id="index-metadata-property-uuid" name="index-metadata-property-uuid" target=".//prop">
                <!-- TODO: Should this be unique across the document and all imported documents? -->
                <key-field target="@uuid"/>
            </index>
            <is-unique id="unique-metadata-link" target="link">
                <key-field target="@href"/>
                <key-field target="@rel"/>
                <key-field target="@media-type"/>
            </is-unique>
            <index id="index-metadata-role-id" name="index-metadata-role-id" target="role">
                <!-- TODO: Should this be unique across the document and all imported documents? -->
                <key-field target="@id"/>
                <!--            <builtin>
               <o:role id="prepared-by">
                  <o:title>Document Preparer</o:title>
               </o:role>
            </builtin>
-->            </index>
            <index id="index-metadata-location-uuid" name="index-metadata-location-uuid" target="location">
                <!-- TODO: Should this be unique across the document and all imported documents? -->
                <key-field target="@uuid"/>
            </index>
            <index id="index-metadata-party-uuid" name="index-metadata-party-uuid" target="party">
                <!-- TODO: Should this be unique across the document and all imported documents? -->
                <key-field target="@uuid"/>
            </index>
            <index id="index-metadata-party-organizations-uuid" name="index-metadata-party-organizations-uuid" target="party[@type='organization']">
                <!-- TODO: Should this be unique across the document and all imported documents? -->
                <key-field target="@uuid"/>
            </index>
            <is-unique id="unique-metadata-responsible-party" target="responsible-party">
                <key-field target="@role-id"/>
                <remarks>
                    <p>Since <code>responsible-party</code> associates multiple <code>party-uuid</code> entries with a single <code>role-id</code>, each role-id must be referenced only once.</p>
                </remarks>
            </is-unique>
            <allowed-values id="allowed-metadata-responsibe-party-role-ids" target="responsible-party/@role-id" allow-other="yes">
                <enum value="creator">Indicates the person or organization that created this content.</enum>
                <enum value="prepared-by">Indicates the person or organization that prepared this content.</enum>
                <enum value="prepared-for">Indicates the person or organization for which this content was created.</enum>
                <enum value="content-approver">Indicates the person or organization responsible for all content represented in the "document".</enum>
                <enum value="contact">Indicates the person or organization to contact for questions or support related to this content.</enum>
            </allowed-values>
            <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                <enum value="keywords">The value identifies a comma-seperated listing of keywords associated with this content. These keywords may be used as search terms for indexing and other applications.</enum>
            </allowed-values>
            <allowed-values target="link/@rel" allow-other="yes">
                <enum value="canonical">The link identifies the authoritative location for this resource. Defined by <a href="https://tools.ietf.org/html/rfc6596">RFC 6596</a>.</enum>
                <enum value="alternate">The link identifies an alternative location or format for this resource. Defined by <a href="https://html.spec.whatwg.org/multipage/links.html#linkTypes">the HTML Living Standard</a></enum>
                <enum value="latest-version">This link identifies a resource containing the latest version in the version history. Defined by <a href="https://tools.ietf.org/html/rfc5829">RFC 5829</a>.</enum>
                <enum value="predecessor-version">This link identifies a resource containing the predecessor version in the version history. Defined by  <a href="https://tools.ietf.org/html/rfc5829">RFC 5829</a>.</enum>
                <enum value="successor-version">This link identifies a resource containing the predecessor version in the version history. Defined by <a href="https://tools.ietf.org/html/rfc5829">RFC 5829</a>.</enum>
            </allowed-values>
            <is-unique target="document-id">
                <key-field target="@scheme"/>
                <key-field target="."/>
                <remarks>
                    <p>The combination of <code>scheme</code> and the field value must be unique.</p>
                </remarks>
            </is-unique>
        </constraint>
        <remarks>
            <p>All OSCAL documents use the same metadata structure, that provides a consistent way of expressing OSCAL document metadata across all OSCAL models. The metadata section also includes declarations of individual objects (i.e., roles, location, parties) that may be referenced within and across linked OSCAL documents.</p>
            <p>The metadata in an OSCAL document has few required fields, representing only the bare minimum data needed to differentiate one instance from another. Tools and users creating OSCAL documents may choose to use any of the optional fields, as well as extension mechanisms (e.g., properties, links) to go beyond this minimum to suit their use cases.</p>
            <p>A publisher of OSCAL content can use the <code>published</code>, <code>last-modified</code>, and <code>version</code> fields to establish information about an individual in a sequence of successive revisions of a given OSCAL-based publication. The metadata for a previous revision can be represented as a <code>revision</code> within this object. Links may also be provided using the <code>predecessor-version</code> and <code>successor-version</code> link relations to provide for direct access to the related resource. These relations can be provided as a link child of this object or as <code>link</code> within a given <code>revision</code>.</p>
            <p>A <code>responsible-party</code> entry in this context refers to roles and parties that have responsibility relative to the production, review, publication, and use of the containing document.</p>
        </remarks>
    </define-assembly>

    <define-field name="location-uuid" as-type="uuid">
        <formal-name>Location Universally Unique Identifier Reference</formal-name>
        <!-- Identifier Reference -->
        <description>Reference to a location by UUID.</description>
        <prop name="value-type" value="identifier-reference"/>
        <prop name="identifier-type" value="machine-oriented"/>
        <prop name="identifier-scope" value="cross-instance"/>
        <constraint>
            <index-has-key name="index-metadata-location-uuid" target=".">
                <!-- TODO: This is impacted by cross-document cross-references We need to relocate or localize this constraint. -->
                <key-field target="."/>
            </index-has-key>
        </constraint>
    </define-field>

    <define-field name="party-uuid" as-type="uuid">
        <formal-name>Party Universally Unique Identifier Reference</formal-name>
        <!-- Identifier Reference -->
        <description>Reference to a party by UUID.</description>
        <prop name="value-type" value="identifier-reference"/>
        <prop name="identifier-type" value="machine-oriented"/>
        <prop name="identifier-scope" value="cross-instance"/>
        <constraint>
            <index-has-key name="index-metadata-party-uuid" target=".">
                <!-- TODO: This is impacted by cross-document cross-references We need to relocate or localize this constraint. -->
                <key-field target="."/>
            </index-has-key>
        </constraint>
    </define-field>

    <define-field name="role-id" as-type="token">
        <formal-name>Role Identifier Reference</formal-name>
        <!-- Identifier Reference -->
        <description>Reference to a role by UUID.</description>
        <prop name="value-type" value="identifier-reference"/>
        <prop name="identifier-type" value="human-oriented"/>
        <prop name="identifier-scope" value="cross-instance"/>
        <constraint>
            <index-has-key name="index-metadata-role-id" target=".">
                <!-- TODO: This is impacted by cross-document cross-references We need to relocate or localize this constraint. -->
                <key-field target="."/>
            </index-has-key>
        </constraint>
    </define-field>

    <!-- ############################################### -->
    <!-- # Back Matter Assembly and related constructs # -->
    <!-- ############################################### -->
    <define-assembly name="back-matter">
        <formal-name>Back matter</formal-name>
        <description>A collection of resources that may be referenced from within the OSCAL document instance.</description>
        <model>
            <define-assembly name="resource" max-occurs="unbounded">
                <formal-name>Resource</formal-name>
                <description>A resource associated with content in the containing document instance. A resource may be directly included in the document using base64 encoding or may point to one or more equivalent internet resources.</description>
                <group-as name="resources" in-json="ARRAY"/>
                <define-flag name="uuid" as-type="uuid" required="yes">
                    <formal-name>Resource Universally Unique Identifier</formal-name>
                    <description>A unique identifier for a resource.</description>
                    <!-- identifier declaration -->
                </define-flag>
                <model>
                    <define-field name="title" as-type="markup-line">
                        <formal-name>Resource Title</formal-name>
                        <description>An optional name given to the resource, which may be used by a tool for display and navigation.</description>
                    </define-field>
                    <define-field name="description" in-xml="WITH_WRAPPER" as-type="markup-multiline">
                        <formal-name>Resource Description</formal-name>
                        <description>An optional short summary of the resource used to indicate the purpose of the resource.</description>
                    </define-field>
                    <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                    </assembly>
                    <field ref="document-id" max-occurs="unbounded">
                        <group-as name="document-ids" in-json="ARRAY"/>
                    </field>
                    <define-assembly name="citation">
                        <formal-name>Citation</formal-name>
                        <description>An optional citation consisting of end note text using structured markup.</description>
                        <model>
                            <define-field name="text" as-type="markup-line" min-occurs="1">
                                <formal-name>Citation Text</formal-name>
                                <description>A line of citation text.</description>
                            </define-field>
                            <assembly ref="property" max-occurs="unbounded">
                                <group-as name="props" in-json="ARRAY"/>
                            </assembly>
                            <assembly ref="link" max-occurs="unbounded">
                                <group-as name="links" in-json="ARRAY"/>
                            </assembly>
                            </model>
                    </define-assembly>
                    <define-assembly name="rlink" max-occurs="unbounded">
                        <formal-name>Resource link</formal-name>
                        <description>A URL-based pointer to an external resource with an optional hash for verification and change detection.</description>
                        <group-as name="rlinks" in-json="ARRAY"/>
                        <define-flag name="href" as-type="uri-reference" required="yes">
                            <formal-name>Hypertext Reference</formal-name>
                            <description>A resolvable URL pointing to the referenced resource.</description>
                            <remarks>
                                <p>This value may be either:</p>
                                <ol>
                                    <li>an <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri">absolute URI</a> that points to a network resolvable resource,</li>
                                    <li>a <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#relative-reference">relative reference</a> pointing to a network resolvable resource whose base URI is the URI of the containing document, or</li>
                                </ol>
                            </remarks>
                        </define-flag>
                        <flag ref="media-type"/>
                        <model>
                            <field ref="hash" max-occurs="unbounded">
                                <description>A hash of the resource identified by <code>href</code>, which can be used to verify the resource was not changed since it was hashed.</description>
                                <group-as name="hashes" in-json="ARRAY"/>
                                <remarks>
                                    <p>The <code>hash</code> value can be used to confirm that the resource referenced by the <code>href</code> is the same resources that was hashed by retrieving the resource, calculating a hash, and comparing the result to this value.</p>
                                </remarks>
                            </field>
                        </model>
                        <remarks>
                            <p>Multiple <code>rlink</code> objects can be included for a resource. In such a case, all provided <code>rlink</code> items are intended to be equivalent in content, but may differ in structure or format.</p>
                            <p>A <code>media-type</code> is used to identify the format of a given rlink, and can be used to differentiate items in a collection of rlinks. The <code>media-type</code> provides a hint to the OSCAL document consumer about the structure of the resource referenced by the <code>rlink</code>.
                            </p>
                        </remarks>
                    </define-assembly>

                    <define-field name="base64" as-type="base64">
                        <formal-name>Base64</formal-name>
                        <description>A resource encoded using the Base64 alphabet defined by <a href="https://www.rfc-editor.org/rfc/rfc2045.html">RFC 2045</a>.</description>
                        <json-value-key>value</json-value-key>
                        <define-flag name="filename" as-type="token">
                            <formal-name>File Name</formal-name>
                            <description>Name of the file before it was encoded as Base64 to be embedded in a <code>resource</code>. This is the name that will be assigned to the file when the file is decoded.</description>
                        </define-flag>
                        <flag ref="media-type"/>
                    </define-field>
                    <field ref="remarks" in-xml="WITH_WRAPPER"/>
                    <!-- <any/> -->
                </model>
                <constraint>
                    <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="type">Identifies the type of resource represented. The most specific appropriate type value SHOULD be used.</enum>
                        <enum value="version">For resources representing a published document, this represents the version number of that document.</enum>
                        <enum value="published">For resources representing a published document, this represents the publication date of that document.</enum>
                    </allowed-values>
                    <matches target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name='published']/@value" datatype="date-time-with-timezone"/>
                    <allowed-values target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name='type']/@value">
                        <!-- More general. Applies across all models. -->
                        <enum value="logo">Indicates the resource is an organization's logo.</enum>
                        <enum value="image">Indicates the resource represents an image.</enum>
                        <enum value="screen-shot">Indicates the resource represents an image of screen content. </enum>
                        <enum value="law">Indicates the resource represents an applicable law.</enum>
                        <enum value="regulation">Indicates the resource represents an applicable regulation.</enum>
                        <enum value="standard">Indicates the resource represents an applicable standard.</enum>
                        <enum value="external-guidance">Indicates the resource represents applicable guidance.</enum>
                        <enum value="acronyms">Indicates the resource provides a list of relevant acronyms.</enum>
                        <enum value="citation">Indicates the resource cites relevant information.</enum>
                        <!-- More related to implementation layer. -->
                        <enum value="policy">Indicates the resource is a policy.</enum>
                        <enum value="procedure">Indicates the resource is a procedure.</enum>
                        <enum value="system-guide">Indicates the resource is guidance document related to the subject system of an SSP.</enum>
                        <enum value="users-guide">Indicates the resource is guidance document a user's guide or administrator's guide.</enum>
                        <enum value="administrators-guide">Indicates the resource is guidance document a administrator's guide.</enum>
                        <enum value="rules-of-behavior">Indicates the resource represents rules of behavior content.</enum>
                        <enum value="plan">Indicates the resource represents a plan.</enum>
                        <!-- More related to assessment layers. -->
                        <enum value="artifact">Indicates the resource represents an artifact, such as may be reviewed by an assessor.</enum>
                        <enum value="evidence">Indicates the resource represents evidence, such as to support an assessment finding.</enum>
                        <enum value="tool-output">Indicates the resource represents output from a tool.</enum>
                        <enum value="raw-data">Indicates the resource represents machine data, which may require a tool or analysis for interpretation or presentation.</enum>
                        <enum value="interview-notes">Indicates the resource represents notes from an interview, such as may be collected during an assessment.</enum>
                        <enum value="questionnaire">Indicates the resource is a set of questions, possibly with responses.</enum>
                        <enum value="report">Indicates the resource is a report.</enum>
                        <enum value="agreement">Indicates the resource is a formal agreement between two or more parties.</enum>
                    </allowed-values>
                    <has-cardinality level="WARNING" target="rlink|base64" min-occurs="1">
                        <description>A resource should provide at least an <code>rlink</code> or <code>base64</code> object.</description>
                    </has-cardinality>
                    <is-unique id="unique-resource-rlink-href" target="rlink">
                        <description>Ensure that each rlink item references a unique resource.</description>
                        <key-field target="@href"/>
                        <key-field target="@media-type"/>
                    </is-unique>
                    <is-unique id="unique-resource-base64-filename" target="base64">
                        <description>Ensure that all base64 resources have a unique <code>filename</code>.</description>
                        <key-field target="@filename"/>
                    </is-unique>
                    <expect target=".[citation]" test="title">
                        <description>A <code>title</code> is required when a <code>citation</code> is provided.</description>
                    </expect>
                </constraint>
                <remarks>
                    <!-- TODO: state that at least one rlink and/or base64 should be provided. -->
                    <p>A resource can be used in two ways. 1) it may point to an specific retrievable network resource using a <code>rlink</code>, or 2) it may be included as an attachment using a <code>base64</code>. A resource may contain multiple <code>rlink</code> and <code>base64</code> entries that represent alternative download locations (rlink) and attachments (base64) for the same resource.</p>
                    <p>Both rlink and base64 allow for a <code>media-type</code> to be specified, which is used to distinguish between different representations of the same resource (e.g., Microsoft Word, PDF). When multiple <code>rlink</code> and <code>base64</code> items are included for a given resource, all items must contain equivalent information. This allows the document consumer to choose a preferred item to process based on a the selected item's <code>media-type</code>. This is extremely important when the items represent OSCAL content that is represented in alternate formats (i.e., XML, JSON, YAML), allowing the same OSCAL data to be processed from any of the available formats indicated by the items.</p>
                    <p>When a resource includes a citation, then the <code>title</code> and <code>citation</code> properties must both be included.</p>
                </remarks>
            </define-assembly>
        </model>
        <constraint>
            <index name="index-back-matter-resource" target="resource">
                <key-field target="@uuid"/>
            </index>
        </constraint>
        <remarks>
            <p>Provides a collection of identified <code>resource</code> objects that can be referenced by a <code>link</code> with a <code>rel</code> value of "reference" and an <code>href</code> value that is a fragment "#" followed by a reference to a reference's <code>uuid</code>. Other specialized link "rel" values also use this pattern when indicated in that context of use.</p>
        </remarks>
        <example>
            <!-- TODO: revisit this example -->
            <description>Use of link, citation, and resource</description>
            <remarks>
                <p>The following is a contrived example to show the use of link, citation, and resource.</p>
            </remarks>
            <o:profile xmlns:o="http://csrc.nist.gov/ns/oscal/example">
                <o:metadata>
                    <o:link rel="citation" href="#a53da8f9-4182-4f11-9d1f-50f08ac2117b">My citation</o:link>
                </o:metadata>
                <o:back-matter>
                    <o:resource uuid="a53da8f9-4182-4f11-9d1f-50f08ac2117b">
                        <o:rlink href="https://example.org/some-resource"/>
                    </o:resource>
                </o:back-matter>
            </o:profile>
        </example>
    </define-assembly>

    <!-- ##################### -->
    <!-- # Global constructs # -->
    <!-- ##################### -->
    <define-assembly name="property">
        <formal-name>Property</formal-name>
        <description>An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.</description>
        <use-name>prop</use-name>
        <define-flag name="name" as-type="token" required="yes">
            <formal-name>Property Name</formal-name>
            <description>A textual label, within a namespace, that identifies a specific attribute, characteristic, or quality of the property's containing object.</description>
        </define-flag>
        <define-flag name="uuid" as-type="uuid">
            <formal-name>Property Universally Unique Identifier</formal-name>
            <!-- identifier declaration -->
            <description>A unique identifier for a property.</description>
        </define-flag>
        <define-flag name="ns" as-type="uri" default="http://csrc.nist.gov/ns/oscal">
            <formal-name>Property Namespace</formal-name>
            <description>A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.</description>
            <remarks>
                <p>This value must be an <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri">absolute URI</a> that serves as a <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier">naming system identifier</a>.</p>
                <p>When a <code>ns</code> is not provided, its value should be assumed to be <code>http://csrc.nist.gov/ns/oscal</code> and the name should be a name defined by the associated OSCAL model.</p>
            </remarks>
        </define-flag>
        <define-flag name="value" as-type="string" required="yes">
            <formal-name>Property Value</formal-name>
            <description>Indicates the value of the attribute, characteristic, or quality.</description>
        </define-flag>
        <define-flag name="class" as-type="token">
            <formal-name>Property Class</formal-name>
            <description>A textual label that provides a sub-type or characterization of the
                property's <code>name</code>.</description>
            <remarks>
                <p>This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same <code>name</code> and <code>ns</code>, or to group properties into categories.</p>
                <p>A <code>class</code> can be used in validation rules to express extra constraints over named items of a specific <code>class</code> value. It is available for grouping, but unlike <code>group</code> is not expected specifically to designate any group membership as such.</p>
            </remarks>
        </define-flag>
        <define-flag name="group" as-type="token">
            <formal-name>Property Group</formal-name>
            <description>An identifier for relating distinct sets of properties.</description>
            <remarks>
                <p>Different sets of properties may relate to separate contexts. Declare a group on a property to associate it with one or more other properties in a given context.</p>
            </remarks>
        </define-flag>
        <model>
            <field ref="remarks" in-xml="WITH_WRAPPER"/>
        </model>
        <constraint>
            <allowed-values target=".[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                <enum value="marking">A label or descriptor that is tied to a sensitivity or classification marking system. An optional class can be used to define the specific marking system used for the associated value.</enum>
            </allowed-values>
        </constraint>
        <remarks>
            <p>Properties permit the deployment and management of arbitrary controlled values, within OSCAL objects. A property can be included for any purpose useful to an application or implementation. Typically, properties will be used to sort, filter, select, order, and arrange OSCAL content objects, to relate OSCAL objects to one another, or to associate an OSCAL object to class hierarchies, taxonomies, or external authorities. Thus, the lexical composition of properties may be constrained by external processes to ensure consistency.</p>
            <p>Property allows for associated remarks that describe why the specific property value was applied to the containing object, or the significance of the value in the context of the containing object.</p>
        </remarks>
    </define-assembly>

    <define-assembly name="link">
        <formal-name>Link</formal-name>
        <description>A reference to a local or remote resource, that has a specific relation to the containing object.</description>
        <define-flag name="href" as-type="uri-reference" required="yes">
            <formal-name>Hypertext Reference</formal-name>
            <description>A resolvable URL reference to a resource.</description>
            <remarks>
                <p>This value may be one of:</p>
                <ol>
                    <li>an <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri">absolute URI</a> that points to a network resolvable resource,</li>
                    <li>a <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#relative-reference">relative reference</a> pointing to a network resolvable resource whose base URI is the URI of the containing document, or</li>
                    <li>a bare URI fragment (i.e., `#uuid`) pointing to an OSCAL object by the objects identifier (e.g., id, uuid) in this or an imported document (see <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#linking-to-another-oscal-object">linking to another OSCAL object</a>). The specific object type will differ based on the link relationship type.</li>
                </ol>
            </remarks>
        </define-flag>
        <define-flag name="rel" as-type="token">
            <formal-name>Link Relation Type</formal-name>
            <description>Describes the type of relationship provided by the link's hypertext reference. This can be an indicator of the link's purpose.</description>
            <constraint>
                <allowed-values allow-other="yes">
                    <enum value="reference">A generalized reference to a network resource (relative or absolute) or to a <code>back-matter</code> resource by UUID expressed as a bare URI fragment.</enum>
                </allowed-values>
            </constraint>
        </define-flag>
        <flag ref="media-type">
            <formal-name>Link Media Type</formal-name>
            <remarks>
                <p>The <code>media-type</code> provides a hint about the content model of the referenced resource. A valid entry from the <a href="https://www.iana.org/assignments/media-types/media-types.xhtml">IANA Media Types registry</a> SHOULD be used.</p>
            </remarks>
        </flag>
        <define-flag name="resource-fragment" as-type="string">
            <formal-name>Resource Fragment</formal-name>
            <description>In case where the <code>href</code> points to a <code>back-matter/resource</code>, this value will indicate the URI <a href="https://www.rfc-editor.org/rfc/rfc3986#section-3.5">fragment</a> to append to any <code>rlink</code> associated with the resource. This value MUST be <a href="https://www.rfc-editor.org/rfc/rfc3986#section-2.1">URI encoded</a>.</description>
        </define-flag>
        <model>
            <define-field name="text" as-type="markup-line">
                <formal-name>Link Text</formal-name>
                <description>A textual label to associate with the link, which may be used for presentation in a tool.</description>
            </define-field>
        </model>
        <constraint>
            <expect target=".[starts-with(@href,'#')]" test="not(exists(@media-type))">
                <description>A local reference SHOULD NOT have a media-type.</description>
                <remarks>
                    <p>Since both <code>link</code> and <code>back-matter/resource</code> both allow specification of a <code>media-type</code>, the <code>media-type</code> on <code>link</code> may conflict with the any <code>media-type</code> entries on a resource's <code>rlink</code> or <code>base64</code> objects. This constraint prevents this from occurring.</p>
                </remarks>
            </expect>
            <matches target=".[@rel=('reference') and starts-with(@href,'#')]/@href" datatype="uri-reference"/>
            <index-has-key name="index-back-matter-resource" target=".[@rel=('reference') and starts-with(@href,'#')]">
                <key-field target="@href" pattern="#(.*)"/>
            </index-has-key>
            <matches target=".[@rel=('reference') and not(starts-with(@href,'#'))]/@href" datatype="uri"/>
            <matches target="@resource-fragment" regex="(?:[0-9a-zA-Z-._~/?!$&amp;'()*+,;=:@]|%[0-9A-F][0-9A-F])+">
                <remarks>
                    <p>This pattern is based on the fragment Augmented Backus-Naur form (ABNF) syntax provided in [RFC3986 section 3.5](https://www.rfc-editor.org/rfc/rfc3986#section-3.5). Uppercase alpha hex digits are required, which is the preferred normalized form defined in RFC3986.</p>
                </remarks>
            </matches>
        </constraint>
        <remarks>
            <p>To provide a cryptographic hash for a remote target resource, a local reference to a back matter <code>resource</code> is needed. The resource allows one or more hash values to be provided using the <code>rlink/hash</code> object.</p>
            <p>The OSCAL <code>link</code> is a roughly based on the HTML <a href="https://www.w3.org/TR/html401/struct/links.html#edef-LINK">link element</a>.
            </p>
        </remarks>
        <example>
            <description>Providing for link integrity</description>
            <remarks>
                <p>The following is a contrived example to show the use of link, citation, and resource.</p>
            </remarks>
            <o:oscal xmlns:o="http://csrc.nist.gov/ns/oscal/example">
                <o:link rel="reference" href="#resource1">My Hashed Resource</o:link>
        ...snip...
                <o:back-matter>
                    <o:resource id="resource1">
                        <o:rlink href="https://example.org/some-resource">
                            <o:hash algorithm="sha512">C2E9C1..snip..F88D2E</o:hash>
                        </o:rlink>
                    </o:resource>
                </o:back-matter>
            </o:oscal>
        </example>
    </define-assembly>

    <define-assembly name="responsible-party">
        <formal-name>Responsible Party</formal-name>
        <description>A reference to a set of persons and/or organizations that have responsibility for performing the referenced role in the context of the containing object.</description>
        <define-flag required="yes" name="role-id" as-type="token">
            <formal-name>Responsible Role</formal-name>
            <!-- Identifier Reference -->
            <description>A reference to a <code>role</code> performed by a <code>party</code>.</description>
            <prop name="value-type" value="identifier-reference"/>
            <prop name="identifier-type" value="human-oriented"/>
            <prop name="identifier-scope" value="cross-instance"/>
        </define-flag>
        <model>
            <field ref="party-uuid" min-occurs="1" max-occurs="unbounded">
                <description>Specifies one or more parties responsible for performing the associated <code>role</code>.</description>
                <group-as name="party-uuids" in-json="ARRAY"/>
            </field>
            <assembly ref="property" max-occurs="unbounded">
                <group-as name="props" in-json="ARRAY"/>
            </assembly>
            <assembly ref="link" max-occurs="unbounded">
                <group-as name="links" in-json="ARRAY"/>
            </assembly>
            <field ref="remarks" in-xml="WITH_WRAPPER"/>
        </model>
        <constraint>
            <index-has-key name="index-metadata-role-id" target=".">
                <key-field target="@role-id"/>
            </index-has-key>
        </constraint>
        <remarks>
            <p>A <code>responsible-party</code> requires one or more <code>party-uuid</code> references creating a strong relationship arc between the referenced <code>role-id</code> and the reference parties. This differs in semantics from <code>responsible-role</code> which doesn't require that a <code>party-uuid</code> is referenced.</p>
            <p>The scope of use of this object determines if the responsibility has been performed or will be performed in the future. The containing object will describe the intent.</p>
        </remarks>
    </define-assembly>
 
    <define-assembly name="action">
        <formal-name>Action</formal-name>
        <description>An action applied by a role within a given party to the content.</description>
        <define-flag name="uuid" as-type="uuid" required="yes">
            <formal-name>Action Universally Unique Identifier</formal-name>
            <description>A unique identifier that can be used to reference this defined action elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.</description>
        </define-flag>
        <define-flag name="date" as-type="date-time-with-timezone">
            <formal-name>Action Occurrence Date</formal-name>
            <description>The date and time when the action occurred.</description>
        </define-flag>
        <define-flag name="type" as-type="token" required="yes">
            <formal-name>Action Type</formal-name>
            <description>The type of action documented by the assembly, such as an approval.</description>
        </define-flag>
        <define-flag name="system" as-type="uri" required="yes">
            <formal-name>Action Type System</formal-name>
            <description>Specifies the action type system used.</description>
            <remarks>
                <p>Provides a means to segment the value space for the <code>type</code>, so that different organizations and individuals can assert control over the allowed <code>action</code>'s <code>type</code>. This allows the semantics associated with a given <code>type</code> to be defined on an organization-by-organization basis.</p>
                <p>An organization MUST use a URI that they have control over. e.g., a domain registered to the organization in a URI, a registered uniform resource names (URN) namespace.</p>
            </remarks>
         </define-flag>
        <model>
            <assembly ref="property" max-occurs="unbounded">
                <group-as name="props" in-json="ARRAY"/>
            </assembly>
            <assembly ref="link" max-occurs="unbounded">
                <group-as name="links" in-json="ARRAY"/>
            </assembly>
            <assembly ref="responsible-party" max-occurs="unbounded">
                <group-as name="responsible-parties" in-json="ARRAY"/>
            </assembly>
            <field ref="remarks" in-xml="WITH_WRAPPER"/>
        </model>
        <constraint>
            <index-has-key name="index-metadata-role-id" target="responsible-party">
                <key-field target="@role-id"/>
            </index-has-key>
            <index-has-key name="index-metadata-party-uuid" target="responsible-party">
                <key-field target="party-uuid"/>
            </index-has-key>
            <allowed-values target="./system/@value" allow-other="yes">
                <enum value="http://csrc.nist.gov/ns/oscal">This value identifies action types defined in the NIST OSCAL namespace.</enum>
             </allowed-values>
             <allowed-values target="./type[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@value">
                <enum value="approval">An approval of a document instance's content.</enum>
                <enum value="request-changes">A request from the responisble party or parties to change the content.</enum>
            </allowed-values>
        </constraint>
    </define-assembly>
 
    <define-assembly name="responsible-role">
        <formal-name>Responsible Role</formal-name>
        <description>A reference to a role with responsibility for performing a function relative to the containing object, optionally associated with a set of persons and/or organizations that perform that role.</description>
        <define-flag name="role-id" as-type="token" required="yes">
            <formal-name>Responsible Role ID</formal-name>
            <description>A <a href="https://pages.nist.gov/OSCAL/concepts/identifier-use/#human-oriented">human-oriented</a> identifier reference to a <code>role</code> performed.</description>
        </define-flag>
        <model>
            <assembly ref="property" max-occurs="unbounded">
                <group-as name="props" in-json="ARRAY"/>
            </assembly>
            <assembly ref="link" max-occurs="unbounded">
                <group-as name="links" in-json="ARRAY"/>
            </assembly>
            <field ref="party-uuid" max-occurs="unbounded">
                <description>Specifies zero or more parties responsible for performing the associated <code>role</code>.</description>
                <group-as name="party-uuids" in-json="ARRAY"/>
            </field>
            <field ref="remarks" in-xml="WITH_WRAPPER"/>
        </model>
        <remarks>
            <p>A <code>responsible-role</code> allows zero or more <code>party-uuid</code> references, each of which creates a relationship arc between the referenced <code>role-id</code> and the referenced party. This differs in semantics from <code>responsible-party</code>, which requires that at least one <code>party-uuid</code> is referenced.</p>
            <p>The scope of use of this object determines if the responsibility has been performed or will be performed in the future. The containing object will describe the intent.</p>
        </remarks>
    </define-assembly>

    <define-field name="hash">
        <!-- TODO: need a hex binary type. -->
        <formal-name>Hash</formal-name>
        <description>A representation of a cryptographic digest generated over a resource using a specified hash algorithm.</description>
        <json-value-key>value</json-value-key>
        <define-flag name="algorithm" as-type="string" required="yes">
            <formal-name>Hash algorithm</formal-name>
            <description>The digest method by which a hash is derived.</description>
            <constraint>
                <allowed-values allow-other="yes">
                    <enum value="SHA-224">The SHA-224 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.180-4">NIST FIPS 180-4</a>.
                    </enum>
                    <enum value="SHA-256">The SHA-256 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.180-4">NIST FIPS 180-4</a>.
                    </enum>
                    <enum value="SHA-384">The SHA-384 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.180-4">NIST FIPS 180-4</a>.
                    </enum>
                    <enum value="SHA-512">The SHA-512 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.180-4">NIST FIPS 180-4</a>.
                    </enum>
                    <enum value="SHA3-224">The SHA3-224 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.202">NIST FIPS 202</a>.
                    </enum>
                    <enum value="SHA3-256">The SHA3-256 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.202">NIST FIPS 202</a>.
                    </enum>
                    <enum value="SHA3-384">The SHA3-384 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.202">NIST FIPS 202</a>.
                    </enum>
                    <enum value="SHA3-512">The SHA3-512 algorithm as defined by <a href="https://doi.org/10.6028/NIST.FIPS.202">NIST FIPS 202</a>.
                    </enum>
                </allowed-values>
            </constraint>
            <remarks>
                <p>Any other value used MUST be a value defined in the W3C <a href="https://www.w3.org/TR/xmlsec-algorithms/#digest-method-uris">XML Security Algorithm Cross-Reference</a> Digest Methods (W3C, April 2013) or <a href="https://tools.ietf.org/html/rfc6931#section-2.1.5">RFC 6931 Section 2.1.5</a> New SHA Functions.</p>
            </remarks>
        </define-flag>
        <constraint>
            <matches id="oscal-check-hash-length-SHA2-3-224" target=".[@algorithm=('SHA-224','SHA3-224')]" regex="^[0-9a-fA-F]{56}$"/>
            <matches id="oscal-check-hash-length-SHA2-3-256" target=".[@algorithm=('SHA-256','SHA3-256')]" regex="^[0-9a-fA-F]{64}$"/>
            <matches id="oscal-check-hash-length-SHA2-3-384" target=".[@algorithm=('SHA-384','SHA3-384')]" regex="^[0-9a-fA-F]{96}$"/>
            <matches id="oscal-check-hash-length-SHA2-3-512" target=".[@algorithm=('SHA-512','SHA3-512')]" regex="^[0-9a-fA-F]{128}$"/>
        </constraint>
    </define-field>

    <define-flag name="media-type" as-type="string">
        <formal-name>Media Type</formal-name>
        <description>A label that indicates the nature of a resource, as a data serialization or
            format.</description>
        <remarks>
            <p> The Internet Assigned Numbers Authority (IANA) <a
                    href="https://www.iana.org/assignments/media-types/media-types.xhtml">Media
                    Types Registry</a> defines a standardized set of media types, which may be used
                here.</p>
            <p>The <code>application/oscal+xml</code>, <code>application/oscal+json</code> or <code>application/oscal+yaml</code> media types SHOULD be used when referencing OSCAL XML, JSON, or YAML resources respectively.</p>
            <p>**Note: There is no official media type for YAML at this time.** OSCAL documents should specify <code>application/yaml</code> for general YAML content, or <code>application/oscal+yaml</code> for YAML-based OSCAL content. This approach aligns with use of a structured name suffix, per <a href="https://www.rfc-editor.org/rfc/rfc6838.html#section-4.2.8">RFC 6838 Section 4.2.8</a>.</p>
            <p>Some earlier OSCAL content incorporated the model into the media type. For example: <code>application/oscal.catalog+xml</code>. This practice SHOULD be avoided, since the OSCAL model can be detected by parsing the initial content of the referenced resource.</p>
        </remarks>
    </define-flag>

    <define-field name="remarks" as-type="markup-multiline">
        <formal-name>Remarks</formal-name>
        <description>Additional commentary about the containing object.</description>
        <remarks>
            <p>The <code>remarks</code> field SHOULD not be used to store arbitrary data. Instead, a <code>prop</code> or <code>link</code> should be used to annotate or reference any additional data not formally supported by OSCAL.</p>
        </remarks>
    </define-field>

    <!-- #################### -->
    <!-- # Local constructs # -->
    <!-- #################### -->
    <define-field name="published" as-type="date-time-with-timezone" scope="local">
        <formal-name>Publication Timestamp</formal-name>
        <description>The date and time the document was last made available.</description>
        <remarks>
            <p>Typically, this date value will be machine-generated at the time the containing document is published.</p>
            <p>In some cases, an OSCAL document may be derived from some source material provided in a different format. In such a case, the <code>published</code> value should indicate when the OSCAL document instance was last published, not the source material.</p>
            <!-- TODO: (AJ) State how to do the following: Where necessary, the publication date of the original source material can be captured as a named property. Define the link relation, and document here how to do this. -->
        </remarks>
    </define-field>

    <define-field name="last-modified" as-type="date-time-with-timezone" scope="local">
        <formal-name>Last Modified Timestamp</formal-name>
        <description>The date and time the document was last stored for later retrieval.</description>
        <remarks>
            <p>This value represents the point in time when the OSCAL document was last updated, or at the point of creation the creation date. Typically, this date value will be machine generated at time of creation or modification. Ideally, this field will be managed by the editing tool or service used to make modifications when storing the modified document.</p>
            <p>The intent of the last modified timestamp is to distinguish between significant change milestones when the document may be accessed by multiple entities. This allows a given entity to differentiate between mutiple document states at specific points in time. It is possible to make multiple modifications to the document without storing these changes. In such a case, the last modified timestamp might not be updated until the document is finally stored.</p>
            <p>In some cases, an OSCAL document may be derived from some source material in a different format. In such a case, the <code>last-modified</code> value should indicate the last modification time of the OSCAL document instance, not the source material.</p>
        </remarks>
    </define-field>
    <define-field name="version" scope="local">
        <formal-name>Document Version</formal-name>
        <description>Used to distinguish a specific revision of an OSCAL document from other previous and future versions.</description>
        <remarks>
            <p>A version may be a release number, sequence number, date, or other identifier sufficient to distinguish between different document revisions.</p>
            <p>While not required, it is recommended that OSCAL content authors use <a href="https://semver.org/spec/v2.0.0.html">Semantic Versioning</a> as the version format. This allows for the easy identification of a version tree consisting of major, minor, and patch numbers.</p>
            <p>A version is typically set by the document owner or by the tool used to maintain the content.</p>
        </remarks>
    </define-field>
    <define-field name="oscal-version" scope="local">
        <formal-name>OSCAL Version</formal-name>
        <description>The OSCAL model version the document was authored against and will conform to as valid.</description>
        <remarks>
            <p>Indicates the version of the OSCAL model to which the document conforms, for example <q>1.1.0</q> or <q>1.0.0-milestone1</q>. That can be used as a hint for a tool indicating which version of the OSCAL XML or JSON schema to use for validation.</p>
            <p>The OSCAL version serves a different purpose from the document version and is used to represent a different concept. If both have the same value, this is coincidental.</p>
        </remarks>
    </define-field>

    <define-field name="email-address" as-type="email-address" scope="local">
        <formal-name>Email Address</formal-name>
        <description>An email address as defined by <a
                href="https://tools.ietf.org/html/rfc5322#section-3.4.1">RFC 5322 Section
            3.4.1</a>.</description>
    </define-field>

    <define-field name="telephone-number" scope="local">
        <formal-name>Telephone Number</formal-name>
        <description>A telephone service number as defined by <a href="https://www.itu.int/rec/T-REC-E.164-201011-I/en">ITU-T E.164</a>.</description>
        <json-value-key>number</json-value-key>
        <define-flag name="type">
            <formal-name>type flag</formal-name>
            <description>Indicates the type of phone number.</description>
            <constraint>
                <allowed-values allow-other="yes">
                    <enum value="home">A home phone number.</enum>
                    <enum value="office">An office phone number.</enum>
                    <enum value="mobile">A mobile phone number.</enum>
                </allowed-values>
            </constraint>
        </define-flag>
        <constraint>
            <matches level="WARNING" target="." regex="^[0-9]{3}[0-9]{1,12}$">
                <remarks>
                    <p>Providing a country code provides an international means to interpret the phone number.</p>
                </remarks>
            </matches>
        </constraint>
    </define-field>

    <define-assembly name="address" scope="local">
        <formal-name>Address</formal-name>
        <description>A postal address for the location.</description>
        <flag ref="location-type">
            <use-name>type</use-name>
        </flag>
        <model>
            <field ref="addr-line" max-occurs="unbounded">
                <!-- CHANGE: "postal-address" to "addr-lines" -->
                <group-as name="addr-lines" in-json="ARRAY"/>
            </field>
            <define-field name="city">
                <formal-name>City</formal-name>
                <description>City, town or geographical region for the mailing address.</description>
            </define-field>
            <define-field name="state">
                <formal-name>State</formal-name>
                <description>State, province or analogous geographical region for a mailing
                    address.</description>
            </define-field>
            <define-field name="postal-code">
                <formal-name>Postal Code</formal-name>
                <description>Postal or ZIP code for mailing address.</description>
            </define-field>
            <define-field name="country">
                <formal-name>Country Code</formal-name>
                <description>The ISO 3166-1 alpha-2 country code for the mailing address.</description>
                <constraint>
                    <matches target="." regex="[A-Z]{2}"/>
                </constraint>
            </define-field>
            <!-- More address stuff -->
        </model>
    </define-assembly>
    <define-field name="addr-line" scope="local">
        <formal-name>Address line</formal-name>
        <description>A single line of an address.</description>
    </define-field>

    <define-flag name="location-type" as-type="token" scope="local">
        <formal-name>Address Type</formal-name>
        <description>Indicates the type of address.</description>
        <constraint>
            <allowed-values allow-other="yes">
                <enum value="home">A home address.</enum>
                <enum value="work">A work address.</enum>
            </allowed-values>
        </constraint>
    </define-flag>

    <define-field name="document-id" scope="local">
        <formal-name>Document Identifier</formal-name>
        <!-- identifier declaration -->
        <description>A document identifier qualified by an identifier
            <code>scheme</code>.</description>
        <json-value-key>identifier</json-value-key>
        <define-flag name="scheme" as-type="uri">
            <formal-name>Document Identification Scheme</formal-name>
            <description>Qualifies the kind of document identifier using a URI. If the scheme is not
                provided the value of the element will be interpreted as a string of
                characters.</description>
            <constraint>
                <allowed-values allow-other="yes">
                    <enum value="http://www.doi.org/">A <a href="https://www.doi.org/hb.html">Digital Object Identifier</a> (DOI); use is preferred, since this allows for retrieval of a full bibliographic record.</enum>
                </allowed-values>
            </constraint>
            <remarks>
                <p>This value must be an <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#absolute-uri">absolute URI</a> that serves as a <a href="https://pages.nist.gov/OSCAL/concepts/uri-use/#use-as-a-naming-system-identifier">naming system identifier</a>.</p>
            </remarks>
        </define-flag>
        <remarks>
            <p>A document identifier provides a <a href="https://pages.nist.gov/OSCAL/concepts/identifier-use/#globally-unique" >globally unique</a> identifier with a <a href="https://pages.nist.gov/OSCAL/concepts/identifier-use/#cross-instance">cross-instance</a> scope that is used for a group of documents that are to be treated as different versions, representations or digital surrogates of the same document.</p>
            <p>A document identifier provides an additional data point for identifying a document that can be assigned by a publisher or organization for purposes in a wider system, such as a digital object identifier (DOI) or a local content management system identifier.</p>
            <p>Use of a document identifier allows for document creators to associate sets of documents that are related in some way by the same <code>document-id</code>.</p>
            <p>An OSCAL document always has an implicit document identifier provided by the document's UUID, defined by the <code>uuid</code> on the top-level object. Having a default UUID-based identifier ensures all documents can be minimally identified when other document identifiers are not provided.</p>
        </remarks>
    </define-field>
</METASCHEMA>
