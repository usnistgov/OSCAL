<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../build/metaschema-xslt/src/validate/metaschema-composition-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!-- OSCAL CATALOG METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<!DOCTYPE METASCHEMA [
   <!ENTITY allowed-values-control-group-property-name SYSTEM "shared-constraints/allowed-values-control-group-property-name.ent">
]>
<?xml-stylesheet type="text/css" href="metaschema-author.css"?>
<METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
      <schema-name>OSCAL Control Catalog Model</schema-name>
      <schema-version>1.1.3</schema-version>
      <short-name>oscal-catalog</short-name>
      <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
      <json-base-uri>http://csrc.nist.gov/ns/oscal</json-base-uri>
      <remarks>
            <p>The OSCAL Control Catalog format can be used to describe a collection of security controls and related control enhancements, along with contextualizing documentation and metadata. The root of the Control Catalog format is <code>catalog</code>.</p>
      </remarks>
      <import href="oscal_control-common_metaschema.xml"/>
      <import href="oscal_metadata_metaschema.xml"/>
      <define-assembly name="catalog">
            <formal-name>Catalog</formal-name>
            <description>A structured, <a href="https://pages.nist.gov/OSCAL/concepts/terminology/#catalog">organized collection</a> of control information.</description>
            <root-name>catalog</root-name>
            <define-flag name="uuid" as-type="uuid" required="yes">
                  <formal-name>Catalog Universally Unique Identifier</formal-name>
                  <description>Provides a globally unique means to identify a given catalog instance.</description>
                  <prop name="value-type" value="identifier"/>
                  <prop name="identifier-type" value="machine-oriented"/>
                  <prop name="identifier-uniqueness" value="global"/>
                  <prop name="identifier-scope" value="cross-instance"/>
                  <prop name="identifier-persistence" value="change-on-write"/>
            </define-flag>

            <model>
                  <assembly ref="metadata" min-occurs="1"/>
                  <assembly ref="parameter" max-occurs="unbounded">
                        <group-as name="params" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="control" max-occurs="unbounded">
                        <group-as name="controls" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="group" max-occurs="unbounded">
                        <group-as name="groups" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="back-matter">
                        <remarks>
                              <p>Back matter including references and resources.</p>
                        </remarks>
                  </assembly>
            </model>
            <constraint>
                  <allowed-values id="oscal-catalog-metadata-prop-name" target="metadata/prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="resolution-tool">The tool used to produce a resolved profile.</enum>
                        <enum value="source-profile-uuid">The document-level <code>uuid</code> of the source profile from which the catalog was produced by <a href="https://pages.nist.gov/OSCAL/concepts/processing/profile-resolution/">profile resolution</a>.</enum>
                  </allowed-values>
                  <allowed-values id="oscal-catalog-metadata-link-rel-type" target="metadata/link/@rel" allow-other="yes">
                        <enum value="source-profile">The profile from which the catalog was produced by <a href="https://pages.nist.gov/OSCAL/concepts/processing/profile-resolution/">profile resolution</a>.</enum>
                        <enum value="source-profile-uuid">The document-level <code>uuid</code> of the profile from which the catalog was produced by <a href="https://pages.nist.gov/OSCAL/concepts/processing/profile-resolution/">profile resolution</a>.</enum>
                  </allowed-values>
                  <index id="oscal-catalog-parts" name="catalog-parts" target="//part" >
                        <key-field target="@id"/>
                  </index>
                  <index id="oscal-catalog-props" name="catalog-props" target="//prop" >
                        <key-field target="@uuid"/>
                  </index>
                  <index id="oscal-catalog-groups-controls-parts" name="catalog-groups-controls-parts" target="//(control|group|part)">
                        <key-field target="@id"/>
                  </index>
                  <index id="oscal-catalog-controls" name="catalog-controls" target="//control" >
                        <key-field target="@id"/>
                  </index>
                  <index id="oscal-catalog-params" name="catalog-params" target="//param" >
                        <key-field target="@id"/>
                  </index>
                  <index id="oscal-catalog-groups" name="catalog-groups" target="//group" >
                        <key-field target="@id"/>
                  </index>
            </constraint>
            <remarks>
                  <p>Catalogs may use one or more <code>group</code> objects to subdivide the control contents of a catalog.</p>
            </remarks>
            <example>
                  <description>A small catalog with a single control.</description>
                  <catalog xmlns="http://csrc.nist.gov/ns/oscal/1.0" uuid="35566cd4-7331-43ba-b023-988c38d62673">
                        <title>A Miniature Catalog</title>
                        <control id="single">
                              <title>A Single Control</title>
                              <!-- TODO: this is not a complete valid example. Fix this. -->
                        </control>
                  </catalog>
            </example>
      </define-assembly>
      <define-assembly name="group">
            <formal-name>Control Group</formal-name>
            <description>A group of controls, or of groups of controls.</description>
            <define-flag name="id" as-type="token">
                  <!-- This is an id because the identifier is assigned and managed externally by humans. -->
                  <formal-name>Group Identifier</formal-name>
                  <!-- Identifier Declaration -->
                  <description>Identifies the group for the purpose of cross-linking within the defining instance or from other instances that reference the catalog.</description>
                  <prop name="value-type" value="identifier"/>
                  <prop name="identifier-type" value="human-oriented"/>
                  <prop name="identifier-uniqueness" value="instance"/>
                  <prop name="identifier-scope" value="cross-instance"/>
                  <prop name="identifier-persistence" value="per-subject"/>
            </define-flag>
            <define-flag name="class" as-type="token">
                  <formal-name>Group Class</formal-name>
                  <description>A textual label that provides a sub-type or characterization of the group.</description>
                  <remarks>
                        <p>A <code>class</code> can be used in validation rules to express extra constraints over named items of a specific <code>class</code> value.</p>
                        <p>A <code>class</code> can also be used in an OSCAL profile as a means to target an alteration to control content.</p>
                  </remarks>
            </define-flag>
            <model>
                  <define-field name="title" as-type="markup-line" min-occurs="1">
                        <formal-name>Group Title</formal-name>
                        <description>A name given to the group, which may be used by a tool for display and navigation.</description>
                  </define-field>
                  <assembly ref="parameter" max-occurs="unbounded">
                        <group-as name="params" in-json="ARRAY"/>
                  </assembly>

                  <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="part" max-occurs="unbounded">
                        <group-as name="parts" in-json="ARRAY"/>
                  </assembly>
                  <choice>
                        <assembly ref="group" max-occurs="unbounded">
                              <group-as name="groups" in-json="ARRAY"/>
                        </assembly>
                        <assembly ref="control" max-occurs="unbounded">
                              <group-as name="controls" in-json="ARRAY"/>
                        </assembly>
                  </choice>
                  <!--<any/>-->
            </model>
            <constraint>
                  <allowed-values id="oscal-group-prop-name" target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
            &allowed-values-control-group-property-name;
                  </allowed-values>
                  <allowed-values id="oscal-group-part-name" target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="overview">An introduction to a control or a group of controls.</enum>
                        <enum value="instruction">Information providing directions for a control or a group of controls.</enum>
                  </allowed-values>
            </constraint>
            <remarks>
                  <p>Catalogs can use the catalog <code>group</code> construct to organize related controls into a single grouping, such as a family of controls or other logical organizational structure.</p>
                  <p>A <code>group</code> may have its own properties, statements, parameters, and references, which are inherited by all controls of that are a member of the group.</p>
            </remarks>
            <example>
                  <group xmlns="http://csrc.nist.gov/ns/oscal/1.0" id="xyz">
                        <title>My Group</title>
                        <prop name="required" value="some value"/>
                        <control id="xyz1">
                              <title>Control</title>
                        </control>
                  </group>
            </example>
      </define-assembly>
      <define-assembly name="control">
            <formal-name>Control</formal-name>
            <description>A <a href="https://pages.nist.gov/OSCAL/concepts/terminology/#control"
                        >structured object</a> representing a requirement or guideline, which when
                  implemented will reduce an aspect of risk related to an information system and its
                  information.</description>
            <define-flag name="id" as-type="token" required="yes">
                  <!-- This is an id because the idenfier is managed externally. -->
                  <formal-name>Control Identifier</formal-name>
                  <!-- Identifier Declaration -->
                  <description>Identifies a control such that it can be referenced in the defining
                        catalog and other OSCAL instances (e.g., profiles).</description>
                  <prop name="value-type" value="identifier"/>
                  <prop name="identifier-type" value="human-oriented"/>
                  <prop name="identifier-uniqueness" value="local"/>
                  <prop name="identifier-scope" value="instance"/>
                  <prop name="identifier-persistence" value="per-subject"/>
            </define-flag>
            <define-flag name="class" as-type="token">
                  <formal-name>Control Class</formal-name>
                  <description>A textual label that provides a sub-type or characterization of the
                        control.</description>
                  <remarks>
                        <p>A <code>class</code> can be used in validation rules to express extra
                              constraints over named items of a specific <code>class</code>
                              value.</p>
                        <p>A <code>class</code> can also be used in an OSCAL profile as a means to
                              target an alteration to control content.</p>
                  </remarks>
            </define-flag>
            <model>
                  <define-field name="title" as-type="markup-line" min-occurs="1">
                        <formal-name>Control Title</formal-name>
                        <description>A name given to the control, which may be used by a tool for
                              display and navigation.</description>
                  </define-field>
                  <assembly ref="parameter" max-occurs="unbounded">
                        <group-as name="params" in-json="ARRAY"/>
                  </assembly>
                  <!-- TODO: Need to be able to add valid values in context -->
                  <assembly ref="property" max-occurs="unbounded">
                        <group-as name="props" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="part" max-occurs="unbounded">
                        <group-as name="parts" in-json="ARRAY"/>
                  </assembly>
                  <assembly ref="control" max-occurs="unbounded">
                        <group-as name="controls" in-json="ARRAY"/>
                  </assembly>
                  <!--<assembly named="ref-list"/>-->
                  <!-- <any/> -->
            </model>
            <constraint>
                  <expect id="oscal-catalog-control-require-statement-when-not-withdrawn" target="."
                        test="part[@ns != 'http://csrc.nist.gov/ns/oscal'] part[@ns='http://csrc.nist.gov/ns/oscal' @name='statement'] or prop[@ns='http://csrc.nist.gov/ns/oscal' @name='status']/@value=('withdrawn','Withdrawn')"/>
                  <allowed-values id="oscal-control-prop-name"
                        target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        &allowed-values-control-group-property-name;
                        <enum value="status">The status of a <code>control</code>. For example, a
                              value of 'withdrawn' can indicate that the <code>control</code> has
                              been withdrawn and should no longer be used.</enum>
                  </allowed-values>
                  <allowed-values id="oscal-control-prop-status-value"
                        target="prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name='status']/@value">
                        <enum value="withdrawn">The control is no longer used.</enum>
                        <enum value="Withdrawn" deprecated="1.0.0">**(deprecated)*** Use 'withdrawn'
                              instead.</enum>
                  </allowed-values>
                  <allowed-values id="oscal-control-link-rel-type" target="link/@rel" allow-other="yes">
                        <enum value="reference">The link cites an external resource related to this
                              control.</enum>
                        <enum value="related">The link identifies another control with bearing to
                              this control.</enum>
                        <enum value="required">The link identifies another control that must be
                              present if this control is present.</enum>
                        <enum value="incorporated-into">The link identifies other control content
                              where this control content is now addressed.</enum>
                        <enum value="moved-to">The containing control definition was moved to the
                              referenced control.</enum>
                  </allowed-values>
                  <!-- TODO: add expect constraint to check for controls that reference themselves -->
                  <index-has-key id="oscal-catalog-groups-controls-parts" level="WARNING" name="catalog-groups-controls-parts"
                        target="link[@rel=('related','required','incorporated-into','moved-to') and starts-with(@href,'#')]">
                        <key-field target="@href" pattern="#(.*)"/>
                  </index-has-key>
                  <allowed-values id="oscal-control-part-name"
                        target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="overview">An introduction to a control or a group of
                              controls.</enum>
                        <enum value="statement">A set of implementation requirements or recommendations.</enum>
                        <enum value="guidance">Additional information to consider when selecting,
                              implementing, assessing, and monitoring a control.</enum>
                        <enum value="example">An example of an implemented requirement or control statement.</enum>
                        <enum value="assessment" deprecated="1.0.1">**(deprecated)** Use
                              'assessment-method' instead.</enum>
                        <enum value="assessment-method">The part describes a method-based assessment
                              over a set of assessment objects.</enum>
                  </allowed-values>
                  <allowed-values id="oscal-control-statement-part-subpart-name"
                        target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name='statement']//part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="item">An individual item within a control statement.</enum>
                        <remarks>
                              <p>Nested statement parts are "item" parts.</p>
                        </remarks>
                  </allowed-values>
                  <allowed-values id="oscal-control-statement-part-name"
                        target=".//part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="objective" deprecated="1.0.1">**(deprecated)** Use
                              'assessment-objective' instead.</enum>
                        <enum value="assessment-objective">The part describes a set of assessment
                              objectives.</enum>
                        <remarks>
                              <p>Objectives can be nested.</p>
                        </remarks>
                  </allowed-values>
                  <allowed-values id="oscal-control-objective-part-subpart-name"
                        target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name=('assessment','assessment-method')]/part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="objects" deprecated="1.0.1">**(deprecated)** Use
                              'assessment-objects' instead.</enum>
                        <enum value="assessment-objects">Provides a listing of assessment
                              objects.</enum>
                        <remarks>
                              <p>Assessment objects appear on assessment methods.</p>
                        </remarks>
                  </allowed-values>
                  <allowed-values id="oscal-control-statement-part-prop-name"
                        target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name=('assessment','assessment-method')]/prop[has-oscal-namespace('http://csrc.nist.gov/ns/oscal')]/@name">
                        <enum value="method" deprecated="1.0.1">**(deprecated)** Use 'method' in the 'http://csrc.nist.gov/ns/rmf' namespace. The assessment method to use. This typically appears on parts with the name "assessment-method".</enum>
                  </allowed-values>
                  <allowed-values id="oscal-control-statement-part-rmf-prop-name"
                        target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name=('assessment','assessment-method')]/prop[has-oscal-namespace('http://csrc.nist.gov/ns/rmf')]/@name">
                        <enum value="method">The assessment method to use. This typically appears on
                              parts with the name "assessment-method".</enum>
                  </allowed-values>
                  <expect level="WARNING" id="oscal-method-part-has-method-prop" target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name=('assessment','assessment-method')]" test="prop[has-oscal-namespace(('http://csrc.nist.gov/ns/oscal','http://csrc.nist.gov/ns/rmf')) and @name='method']"/>
                  <allowed-values id="oscal-control-objective-part-method-prop-value"
                        target="part[has-oscal-namespace('http://csrc.nist.gov/ns/oscal') and @name=('assessment','assessment-method')]/prop[has-oscal-namespace(('http://csrc.nist.gov/ns/oscal','http://csrc.nist.gov/ns/rmf')) and @name='method']/@value">
                        <enum value="INTERVIEW">The process of holding discussions with individuals or groups of individuals within an organization to once again, facilitate assessor understanding, achieve clarification, or obtain evidence.</enum>
                        <enum value="EXAMINE">The process of reviewing, inspecting, observing, studying, or analyzing one or more assessment objects (i.e., specifications, mechanisms, or activities).</enum>
                        <enum value="TEST">The process of exercising one or more assessment objects (i.e., activities or mechanisms) under specified conditions to compare actual with expected behavior.</enum>
                  </allowed-values>
            </constraint>
            <remarks>
                  <p>Each security or privacy control within the catalog is defined by a distinct control instance. Controls may be as complex or as simple as a catalog defines them. They may be decomposed or further specified into child <code>control</code> objects, for example to represent control enhancements or specific breakouts of control functionality, to be maintained as discrete requirements. Controls may also contain structured parts (using <code>part</code>) and they may be grouped together in families or classes with <code>group</code>.</p>
                  <p>Control structures in OSCAL will also exhibit regularities and rules that are not codified in OSCAL but in its applications or domains of application. For example, for catalogs describing controls as defined by NIST SP 800-53, a control must have a part with the name "statement", which represents the textual narrative of the control. This "statement" part must occur only once, but may have nested parts to allow for multiple paragraphs or sections of text. This organization supports addressability of this data content as long as, and only insofar as, it is consistently implemented across the control set. As given with these model definitions, constraints defined and assigned here can aid in ensuring this regularity; but other such constraints and other useful patterns of use remain to be discovered and described.</p>
            </remarks>
            <example>
                  <control xmlns="http://csrc.nist.gov/ns/oscal/1.0" id="x">
                        <title>Control 1</title>
                  </control>
            </example>
      </define-assembly>
</METASCHEMA>
